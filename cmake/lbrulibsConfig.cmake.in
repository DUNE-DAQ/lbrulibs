
@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

find_dependency(appfwk)
find_dependency(logging)
find_dependency(detdataformats)
find_dependency(readout)
find_dependency(ipm)

if (EXISTS ${CMAKE_SOURCE_DIR}/@PROJECT_NAME@)

message(STATUS "Project \"@PROJECT_NAME@\" will be treated as repo (found in ${CMAKE_SOURCE_DIR}/@PROJECT_NAME@)")
add_library(lbrulibs::lbrulibs ALIAS lbrulibs)

else()

message(STATUS "Project \"@PROJECT_NAME@\" will be treated as installed package (found in ${CMAKE_CURRENT_LIST_DIR})")
set_and_check(targets_file ${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake)
include(${targets_file})

endif()

check_required_components(@PROJECT_NAME@)
